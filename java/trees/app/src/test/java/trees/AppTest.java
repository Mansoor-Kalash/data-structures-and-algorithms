/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package trees;

import org.junit.Test;

import java.util.ArrayList;

import static org.junit.Assert.*;

public class AppTest {
    @Test public void appHasAGreeting() {
        App classUnderTest = new App();
//        assertNotNull("app should have a greeting", classUnderTest.getGreeting());
    }
    @Test public void testTrees(){
      BinarySearchTree<Integer> tree = new BinarySearchTree<>();
      ArrayList<Integer> tsetExpectedPreOrder = new ArrayList<>();
      ArrayList<Integer> tsetExpectedInOrder = new ArrayList<>();
      ArrayList<Integer> tsetExpectedPostOrder = new ArrayList<>();
// InOrder Expected
      tsetExpectedInOrder.add(10);
      tsetExpectedInOrder.add(40);
      tsetExpectedInOrder.add(50);
// postOrder Expected

      tsetExpectedPostOrder.add(10);
      tsetExpectedPostOrder.add(50);
      tsetExpectedPostOrder.add(40);

      assertEquals("Can successfully instantiate an empty tree",tsetExpectedPreOrder,tree.preOrder(tree.getRoot()));
      tree.add(40);
      tsetExpectedPreOrder.add(40);
      assertEquals("Can successfully instantiate a tree with a single root node",tsetExpectedPreOrder,tree.preOrder(tree.getRoot()));

      tree.add(50);
      tree.add(10);
      tsetExpectedPreOrder.add(10);
      tsetExpectedPreOrder.add(50);
      assertEquals("Can successfully add a left child and right child to a single root node",tsetExpectedPreOrder,tree.preOrder(tree.getRoot()));
assertEquals(tsetExpectedPreOrder,tree.preOrder(tree.getRoot()));//Can successfully return a collection from a preorder traversal
      assertEquals(tsetExpectedInOrder,tree.InOrder(tree.getRoot()));//Can successfully return a collection from an inorder traversal

      assertEquals(tsetExpectedPostOrder,tree.postOrder(tree.getRoot()));//Can successfully return a collection from a postorder traversal

    }
}
