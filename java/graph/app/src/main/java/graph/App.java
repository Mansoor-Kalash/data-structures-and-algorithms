/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph;

public class App {
    public static void main(String[] args) {
      Graph<Integer> graph1 = new Graph<>();

      Node<Integer> node1 = graph1.addNode(5);
      Node<Integer> node2 = graph1.addNode(6);
      graph1.addEdge(node1,node2,true);

      Node<Integer> node3 = graph1.addNode(4);
      Node<Integer> node4 = graph1.addNode(3);
      graph1.addEdge(node3,node4,false);

      graph1.addEdge(node1,node3,true);
      graph1.addEdge(node2,node4,false);

      System.out.println(graph1.getNodes().size());
      System.out.println(graph1.getNodes());
      System.out.println(graph1.getNeighbors(node1).toString());
    }
//  public Integer businessTrip(Graph graph, List<String> cities){
//    totalCost = 0;
//    int citiesSize = cities.size();
//
//    for (int i = 0; i < citiesSize; i ++){
//      if (i + 1 >= citiesSize){
//        break;
//      }
//      helperTrip(cities.get(i), cities.get(i + 1), graph);
//    }
//
//    return totalCost;
//  }
//
//  private void helperTrip(String city1, String city2, Graph graph){
//    if (graph.getNeighbors(city1) == null){
//      return;
//    }
//    for (Node vertex: graph.getNeighbors(city1)) {
//      if (Objects.equals(city2, vertex.label)){
//        totalCost += vertex.weight;
//        break;
//      }
//    }
}
